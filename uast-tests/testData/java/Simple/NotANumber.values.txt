UFile (package = ) [public class NotANumber : Object {...]
    UClass (name = NotANumber) [public class NotANumber : Object {...}]
        UMethod (name = foo) [public static fun foo() : boolean {...}]
            UBlockExpression [{...}] = Nothing
                UVariableDeclarationsExpression [var x: double = 0.0 / 0.0] = Undetermined
                    ULocalVariable (name = x) [var x: double = 0.0 / 0.0]
                        UBinaryExpression (operator = /) [0.0 / 0.0] = NaN
                            ULiteralExpression (value = 0.0) [0.0] = 0.0
                            ULiteralExpression (value = 0.0) [0.0] = 0.0
                UVariableDeclarationsExpression [var b1: boolean = x < x] = Undetermined
                    ULocalVariable (name = b1) [var b1: boolean = x < x]
                        UBinaryExpression (operator = <) [x < x] = false (depending on: (var x = NaN))
                            USimpleNameReferenceExpression [x] = (var x = NaN)
                            USimpleNameReferenceExpression [x] = (var x = NaN)
                UVariableDeclarationsExpression [var b2: boolean = x > x] = Undetermined
                    ULocalVariable (name = b2) [var b2: boolean = x > x]
                        UBinaryExpression (operator = >) [x > x] = false (depending on: (var x = NaN))
                            USimpleNameReferenceExpression [x] = (var x = NaN)
                            USimpleNameReferenceExpression [x] = (var x = NaN)
                UVariableDeclarationsExpression [var b3: boolean = x <= x] = Undetermined
                    ULocalVariable (name = b3) [var b3: boolean = x <= x]
                        UBinaryExpression (operator = <=) [x <= x] = false (depending on: (var x = NaN))
                            USimpleNameReferenceExpression [x] = (var x = NaN)
                            USimpleNameReferenceExpression [x] = (var x = NaN)
                UVariableDeclarationsExpression [var b4: boolean = x >= x] = Undetermined
                    ULocalVariable (name = b4) [var b4: boolean = x >= x]
                        UBinaryExpression (operator = >=) [x >= x] = false (depending on: (var x = NaN))
                            USimpleNameReferenceExpression [x] = (var x = NaN)
                            USimpleNameReferenceExpression [x] = (var x = NaN)
                UVariableDeclarationsExpression [var b5: boolean = x === x] = Undetermined
                    ULocalVariable (name = b5) [var b5: boolean = x === x]
                        UBinaryExpression (operator = ===) [x === x] = false (depending on: (var x = NaN))
                            USimpleNameReferenceExpression [x] = (var x = NaN)
                            USimpleNameReferenceExpression [x] = (var x = NaN)
                UVariableDeclarationsExpression [var b6: boolean = x !== x] = Undetermined
                    ULocalVariable (name = b6) [var b6: boolean = x !== x]
                        UBinaryExpression (operator = !==) [x !== x] = true (depending on: (var x = NaN))
                            USimpleNameReferenceExpression [x] = (var x = NaN)
                            USimpleNameReferenceExpression [x] = (var x = NaN)
                UReturnExpression [return b1 || b2 || b3 || b4 || b5 || !b6] = Nothing
                    UBinaryExpression (operator = ||) [b1 || b2 || b3 || b4 || b5 || !b6] = false (depending on: (var b1 = false (depending on: (var x = NaN))), (var b2 = false (depending on: (var x = NaN))), (var b3 = false (depending on: (var x = NaN))), (var b4 = false (depending on: (var x = NaN))), (var b5 = false (depending on: (var x = NaN))), (var b6 = true (depending on: (var x = NaN))))
                        UBinaryExpression (operator = ||) [b1 || b2 || b3 || b4 || b5] = false (depending on: (var b1 = false (depending on: (var x = NaN))), (var b2 = false (depending on: (var x = NaN))), (var b3 = false (depending on: (var x = NaN))), (var b4 = false (depending on: (var x = NaN))), (var b5 = false (depending on: (var x = NaN))))
                            UBinaryExpression (operator = ||) [b1 || b2 || b3 || b4] = false (depending on: (var b1 = false (depending on: (var x = NaN))), (var b2 = false (depending on: (var x = NaN))), (var b3 = false (depending on: (var x = NaN))), (var b4 = false (depending on: (var x = NaN))))
                                UBinaryExpression (operator = ||) [b1 || b2 || b3] = false (depending on: (var b1 = false (depending on: (var x = NaN))), (var b2 = false (depending on: (var x = NaN))), (var b3 = false (depending on: (var x = NaN))))
                                    UBinaryExpression (operator = ||) [b1 || b2] = false (depending on: (var b1 = false (depending on: (var x = NaN))), (var b2 = false (depending on: (var x = NaN))))
                                        USimpleNameReferenceExpression [b1] = (var b1 = false (depending on: (var x = NaN)))
                                        USimpleNameReferenceExpression [b2] = (var b2 = false (depending on: (var x = NaN)))
                                    USimpleNameReferenceExpression [b3] = (var b3 = false (depending on: (var x = NaN)))
                                USimpleNameReferenceExpression [b4] = (var b4 = false (depending on: (var x = NaN)))
                            USimpleNameReferenceExpression [b5] = (var b5 = false (depending on: (var x = NaN)))
                        UPrefixExpression (operator = !) [!b6] = false (depending on: (var b6 = true (depending on: (var x = NaN))))
                            USimpleNameReferenceExpression [b6] = (var b6 = true (depending on: (var x = NaN)))
        UMethod (name = bar) [public static fun bar() : boolean {...}]
            UBlockExpression [{...}] = Nothing
                UVariableDeclarationsExpression [var x: float = 0.0 / 0.0] = Undetermined
                    ULocalVariable (name = x) [var x: float = 0.0 / 0.0]
                        UBinaryExpression (operator = /) [0.0 / 0.0] = NaNF
                            ULiteralExpression (value = 0.0) [0.0] = 0.0F
                            ULiteralExpression (value = 0.0) [0.0] = 0.0F
                UVariableDeclarationsExpression [var b1: boolean = x <= x] = Undetermined
                    ULocalVariable (name = b1) [var b1: boolean = x <= x]
                        UBinaryExpression (operator = <=) [x <= x] = false (depending on: (var x = NaNF))
                            USimpleNameReferenceExpression [x] = (var x = NaNF)
                            USimpleNameReferenceExpression [x] = (var x = NaNF)
                UVariableDeclarationsExpression [var b2: boolean = x >= x] = Undetermined
                    ULocalVariable (name = b2) [var b2: boolean = x >= x]
                        UBinaryExpression (operator = >=) [x >= x] = false (depending on: (var x = NaNF))
                            USimpleNameReferenceExpression [x] = (var x = NaNF)
                            USimpleNameReferenceExpression [x] = (var x = NaNF)
                UVariableDeclarationsExpression [var b3: boolean = x < x] = Undetermined
                    ULocalVariable (name = b3) [var b3: boolean = x < x]
                        UBinaryExpression (operator = <) [x < x] = false (depending on: (var x = NaNF))
                            USimpleNameReferenceExpression [x] = (var x = NaNF)
                            USimpleNameReferenceExpression [x] = (var x = NaNF)
                UVariableDeclarationsExpression [var b4: boolean = x > x] = Undetermined
                    ULocalVariable (name = b4) [var b4: boolean = x > x]
                        UBinaryExpression (operator = >) [x > x] = false (depending on: (var x = NaNF))
                            USimpleNameReferenceExpression [x] = (var x = NaNF)
                            USimpleNameReferenceExpression [x] = (var x = NaNF)
                UVariableDeclarationsExpression [var b5: boolean = x === x] = Undetermined
                    ULocalVariable (name = b5) [var b5: boolean = x === x]
                        UBinaryExpression (operator = ===) [x === x] = false (depending on: (var x = NaNF))
                            USimpleNameReferenceExpression [x] = (var x = NaNF)
                            USimpleNameReferenceExpression [x] = (var x = NaNF)
                UVariableDeclarationsExpression [var b6: boolean = x !== x] = Undetermined
                    ULocalVariable (name = b6) [var b6: boolean = x !== x]
                        UBinaryExpression (operator = !==) [x !== x] = true (depending on: (var x = NaNF))
                            USimpleNameReferenceExpression [x] = (var x = NaNF)
                            USimpleNameReferenceExpression [x] = (var x = NaNF)
                UReturnExpression [return b1 || b2 || b3 || b4 || b5 || !b6] = Nothing
                    UBinaryExpression (operator = ||) [b1 || b2 || b3 || b4 || b5 || !b6] = false (depending on: (var b1 = false (depending on: (var x = NaNF))), (var b2 = false (depending on: (var x = NaNF))), (var b3 = false (depending on: (var x = NaNF))), (var b4 = false (depending on: (var x = NaNF))), (var b5 = false (depending on: (var x = NaNF))), (var b6 = true (depending on: (var x = NaNF))))
                        UBinaryExpression (operator = ||) [b1 || b2 || b3 || b4 || b5] = false (depending on: (var b1 = false (depending on: (var x = NaNF))), (var b2 = false (depending on: (var x = NaNF))), (var b3 = false (depending on: (var x = NaNF))), (var b4 = false (depending on: (var x = NaNF))), (var b5 = false (depending on: (var x = NaNF))))
                            UBinaryExpression (operator = ||) [b1 || b2 || b3 || b4] = false (depending on: (var b1 = false (depending on: (var x = NaNF))), (var b2 = false (depending on: (var x = NaNF))), (var b3 = false (depending on: (var x = NaNF))), (var b4 = false (depending on: (var x = NaNF))))
                                UBinaryExpression (operator = ||) [b1 || b2 || b3] = false (depending on: (var b1 = false (depending on: (var x = NaNF))), (var b2 = false (depending on: (var x = NaNF))), (var b3 = false (depending on: (var x = NaNF))))
                                    UBinaryExpression (operator = ||) [b1 || b2] = false (depending on: (var b1 = false (depending on: (var x = NaNF))), (var b2 = false (depending on: (var x = NaNF))))
                                        USimpleNameReferenceExpression [b1] = (var b1 = false (depending on: (var x = NaNF)))
                                        USimpleNameReferenceExpression [b2] = (var b2 = false (depending on: (var x = NaNF)))
                                    USimpleNameReferenceExpression [b3] = (var b3 = false (depending on: (var x = NaNF)))
                                USimpleNameReferenceExpression [b4] = (var b4 = false (depending on: (var x = NaNF)))
                            USimpleNameReferenceExpression [b5] = (var b5 = false (depending on: (var x = NaNF)))
                        UPrefixExpression (operator = !) [!b6] = false (depending on: (var b6 = true (depending on: (var x = NaNF))))
                            USimpleNameReferenceExpression [b6] = (var b6 = true (depending on: (var x = NaNF)))
