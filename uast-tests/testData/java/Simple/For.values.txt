UFile (package = ) [public class For : Object {...]
    UClass (name = For) [public class For : Object {...}]
        UMethod (name = foo) [public static fun foo() : int {...}]
            UBlockExpression [{...}] = Nothing
                UVariableDeclarationsExpression [var result: int = 0] = Undetermined
                    ULocalVariable (name = result) [var result: int = 0]
                        ULiteralExpression (value = 0) [0] = 0
                UForExpression [for (var i: int = 0; i < 10; i++) {...}] = Undetermined
                    UVariableDeclarationsExpression [var i: int = 0] = Undetermined
                        ULocalVariable (name = i) [var i: int = 0]
                            ULiteralExpression (value = 0) [0] = 0
                    UBinaryExpression (operator = <) [i < 10] = true (depending on: (var i = 0))
                        USimpleNameReferenceExpression [i] = (var i = 0)
                        ULiteralExpression (value = 10) [10] = 10
                    UPostfixExpression (operator = ++) [i++] = Undetermined
                        USimpleNameReferenceExpression [i] = Undetermined
                    UBlockExpression [{...}] = Undetermined (depending on: (var i = 0))
                        UBinaryExpression (operator = =) [result = result + i] = Undetermined (depending on: (var i = 0))
                            USimpleNameReferenceExpression [result] = Phi((var result = Undetermined (depending on: (var i = 0))), (var result = 0 (depending on: (var i = 0))), (var result = 0))
                            UBinaryExpression (operator = +) [result + i] = Undetermined (depending on: (var i = 0))
                                USimpleNameReferenceExpression [result] = Phi((var result = Undetermined (depending on: (var i = 0))), (var result = 0 (depending on: (var i = 0))), (var result = 0))
                                USimpleNameReferenceExpression [i] = (var i = 0)
                UReturnExpression [return result] = Nothing
                    USimpleNameReferenceExpression [result] = Phi((var result = Undetermined (depending on: (var i = 0))), (var result = 0 (depending on: (var i = 0))), (var result = 0))
