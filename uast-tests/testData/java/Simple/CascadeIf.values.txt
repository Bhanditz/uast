UFile (package = ) [public class CascadeIf {...]
    UClass (name = CascadeIf) [public class CascadeIf {...}]
        UMethod (name = foo) [public static fun foo(f: boolean, g: boolean, h: boolean) : int {...}]
            UParameter (name = f) [var f: boolean]
            UParameter (name = g) [var g: boolean]
            UParameter (name = h) [var h: boolean]
            UBlockExpression [{...}] = Nothing
                UVariableDeclarationsExpression [var x: int = 0] = Undetermined
                    ULocalVariable (name = x) [var x: int = 0]
                        ULiteralExpression (value = 0) [0] = 0
                UVariableDeclarationsExpression [var y: int = 1] = Undetermined
                    ULocalVariable (name = y) [var y: int = 1]
                        ULiteralExpression (value = 1) [1] = 1
                UVariableDeclarationsExpression [var v: int = 2] = Undetermined
                    ULocalVariable (name = v) [var v: int = 2]
                        ULiteralExpression (value = 2) [2] = 2
                UVariableDeclarationsExpression [var w: int = 3] = Undetermined
                    ULocalVariable (name = w) [var w: int = 3]
                        ULiteralExpression (value = 3) [3] = 3
                UVariableDeclarationsExpression [var z: int] = Undetermined
                    ULocalVariable (name = z) [var z: int]
                UIfExpression [if (f) {...}] = Phi((var y = 1), (var x = 0), (var v = 2), (var w = 3))
                    USimpleNameReferenceExpression [f] = Undetermined
                    UBlockExpression [{...}] = (var y = 1)
                        UBinaryExpression (operator = =) [z = y] = (var y = 1)
                            USimpleNameReferenceExpression [z] = (var z = Undetermined)
                            USimpleNameReferenceExpression [y] = (var y = 1)
                    UIfExpression [if (g) {...}] = Phi((var x = 0), (var v = 2), (var w = 3))
                        USimpleNameReferenceExpression [g] = Undetermined
                        UBlockExpression [{...}] = (var x = 0)
                            UBinaryExpression (operator = =) [z = x] = (var x = 0)
                                USimpleNameReferenceExpression [z] = (var z = Undetermined)
                                USimpleNameReferenceExpression [x] = (var x = 0)
                        UIfExpression [if (h) {...}] = Phi((var v = 2), (var w = 3))
                            USimpleNameReferenceExpression [h] = Undetermined
                            UBlockExpression [{...}] = (var v = 2)
                                UBinaryExpression (operator = =) [z = v] = (var v = 2)
                                    USimpleNameReferenceExpression [z] = (var z = Undetermined)
                                    USimpleNameReferenceExpression [v] = (var v = 2)
                            UBlockExpression [{...}] = (var w = 3)
                                UBinaryExpression (operator = =) [z = w] = (var w = 3)
                                    USimpleNameReferenceExpression [z] = (var z = Undetermined)
                                    USimpleNameReferenceExpression [w] = (var w = 3)
                UReturnExpression [return z] = Nothing
                    USimpleNameReferenceExpression [z] = Phi((var z = (var y = 1)), (var z = (var x = 0)), (var z = (var v = 2)), (var z = (var w = 3)))
