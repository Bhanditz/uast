UFile (package = ) [import java.util...]
    UImportStatement (isOnDemand = true) [import java.util]
    UClass (name = For) [public class For : Object {...}]
        UMethod (name = getList) [public static fun getList(size: int) : List<Integer> {...}]
            UParameter (name = size) [var size: int]
            UBlockExpression [{...}] = Nothing
                UVariableDeclarationsExpression [var result: List<Integer> = LinkedList<Integer>()] = Undetermined
                    ULocalVariable (name = result) [var result: List<Integer> = LinkedList<Integer>()]
                        UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0)) [LinkedList<Integer>()] = external LinkedList<Integer>()
                            USimpleNameReferenceExpression [LinkedList<Integer>] = external LinkedList<Integer>
                UForExpression [for (var i: int = 0; i < size; i++) {...}] = Undetermined
                    UVariableDeclarationsExpression [var i: int = 0] = Undetermined
                        ULocalVariable (name = i) [var i: int = 0]
                            ULiteralExpression (value = 0) [0] = 0
                    UBinaryExpression (operator = <) [i < size] = Undetermined (depending on: (var i = 0))
                        USimpleNameReferenceExpression [i] = (var i = 0)
                        USimpleNameReferenceExpression [size] = Undetermined
                    UPostfixExpression (operator = ++) [i++] = Undetermined
                        USimpleNameReferenceExpression [i] = Undetermined
                    UBlockExpression [{...}] = external result.add(i)
                        UQualifiedReferenceExpression [result.add(i)] = external result.add(i)
                            USimpleNameReferenceExpression [result] = Undetermined
                            UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1)) [add(i)] = external add(i)
                                UIdentifier (Identifier (add)) [UIdentifier (Identifier (add))]
                                USimpleNameReferenceExpression [i] = Undetermined
                UReturnExpression [return result] = Nothing
                    USimpleNameReferenceExpression [result] = (var result = external LinkedList<Integer>())
        UMethod (name = sum) [public static fun sum(numbers: List<Integer>) : int {...}]
            UParameter (name = numbers) [var numbers: List<Integer>]
            UBlockExpression [{...}] = Nothing
                UVariableDeclarationsExpression [var result: int = 0] = Undetermined
                    ULocalVariable (name = result) [var result: int = 0]
                        ULiteralExpression (value = 0) [0] = 0
                UVariableDeclarationsExpression [var size: int = 3] = Undetermined
                    ULocalVariable (name = size) [var size: int = 3]
                        ULiteralExpression (value = 3) [3] = 3
                UForEachExpression [for (number : getList(++size)) {...}] = Undetermined
                    UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1)) [getList(++size)] = external getList(++size)
                        UIdentifier (Identifier (getList)) [UIdentifier (Identifier (getList))]
                        UPrefixExpression (operator = ++) [++size] = 4 (depending on: (var size = 3))
                            USimpleNameReferenceExpression [size] = (var size = 3)
                    UBlockExpression [{...}] = Undetermined
                        UBinaryExpression (operator = =) [result = result + number] = Undetermined
                            USimpleNameReferenceExpression [result] = Phi((var result = Undetermined), (var result = 0))
                            UBinaryExpression (operator = +) [result + number] = Undetermined
                                USimpleNameReferenceExpression [result] = Phi((var result = Undetermined), (var result = 0))
                                USimpleNameReferenceExpression [number] = Undetermined
                UReturnExpression [return result + size] = Nothing
                    UBinaryExpression (operator = +) [result + size] = Undetermined (depending on: (var size = 4))
                        USimpleNameReferenceExpression [result] = Phi((var result = Undetermined), (var result = 0))
                        USimpleNameReferenceExpression [size] = (var size = 4)
